name: RustOS CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  TARGET: aarch64-unknown-none-softfloat

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: aarch64-unknown-none-softfloat
        override: true
        components: rust-src, llvm-tools-preview
        
    - name: Install additional tools
      run: |
        cargo install cargo-binutils
        sudo apt-get update
        sudo apt-get install -y qemu-system-aarch64
        
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Cache target directory
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-target-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Build kernel
      run: make kernel
      
    - name: Build test binaries
      run: |
        cargo build --target $TARGET --bin kernel_tests
        cargo build --target $TARGET --bin syscall_tests
        cargo build --target $TARGET --bin stress_tests
        
    - name: Upload kernel binary
      uses: actions/upload-artifact@v3
      with:
        name: kernel-binary
        path: target/${{ env.TARGET }}/debug/rustos
        
    - name: Upload test binaries
      uses: actions/upload-artifact@v3
      with:
        name: test-binaries
        path: |
          target/${{ env.TARGET }}/debug/kernel_tests
          target/${{ env.TARGET }}/debug/syscall_tests
          target/${{ env.TARGET }}/debug/stress_tests

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    
    strategy:
      matrix:
        test-suite: [kernel_tests, syscall_tests, stress_tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-aarch64
        
    - name: Download test binaries
      uses: actions/download-artifact@v3
      with:
        name: test-binaries
        path: target/${{ env.TARGET }}/debug/
        
    - name: Make binaries executable
      run: chmod +x target/${{ env.TARGET }}/debug/*
      
    - name: Run ${{ matrix.test-suite }}
      run: |
        timeout 300 qemu-system-aarch64 \
          -machine virt \
          -cpu cortex-a72 \
          -smp 4 \
          -m 2G \
          -serial stdio \
          -display none \
          -kernel target/${{ env.TARGET }}/debug/${{ matrix.test-suite }} \
          -semihosting-config enable=on,target=native \
          || echo "Test completed"

  release:
    name: Build Release
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: aarch64-unknown-none-softfloat
        override: true
        components: rust-src, llvm-tools-preview
        
    - name: Build release kernel
      run: make release
      
    - name: Create bootable image
      run: make image
      
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-kernel
        path: |
          target/${{ env.TARGET }}/release/rustos
          target/${{ env.TARGET }}/release/image/kernel8.img

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install QEMU
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-aarch64
        
    - name: Download test binaries
      uses: actions/download-artifact@v3
      with:
        name: test-binaries
        path: target/${{ env.TARGET }}/debug/
        
    - name: Make binaries executable
      run: chmod +x target/${{ env.TARGET }}/debug/*
      
    - name: Run performance tests
      run: |
        timeout 600 qemu-system-aarch64 \
          -machine virt \
          -cpu cortex-a72 \
          -smp 4 \
          -m 2G \
          -serial stdio \
          -display none \
          -kernel target/${{ env.TARGET }}/debug/stress_tests \
          -semihosting-config enable=on,target=native \
          > performance_results.txt || echo "Performance tests completed"
          
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: performance_results.txt

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: aarch64-unknown-none-softfloat
        override: true
        components: rust-src
        
    - name: Clone uutils/coreutils
      run: git clone https://github.com/uutils/coreutils.git
      
    - name: Build coreutils for ARM64
      run: |
        cd coreutils
        cargo build --target $TARGET --features unix || echo "Coreutils build attempted"
        
    - name: Test basic integration
      run: echo "Integration tests would verify coreutils compatibility"